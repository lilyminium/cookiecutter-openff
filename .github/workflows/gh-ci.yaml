
name: Cookiecutter CI

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    # weekly tests
    - cron: "0 0 * * 0"

defaults:
  run:
    shell: bash

env:
    ARTIFACT_NAME: demo-openff-cookie-repos
    OUTPUT_DIRECTORY: /home/runner/example_outputs
    GH_USER: github-actions
    GH_EMAIL: "github-action@users.noreply.github.com"
    GH_REPOSITORY: "github.com/${{ github.repository }}.git"

jobs:
  cookiecutter-main-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        # check last three versions of Python
        last-n-minor-python-release: [2, 1, 0]

    steps:
      - uses: actions/checkout@v3

      - id: get-python-version
        uses: MDAnalysis/get-latest-python-version@main
        with:
          last-n-minor-release: ${{ matrix.last-n-minor-python-release }}

      - name: Environment information
        run: |
          uname -a
          df -h
          ulimit -a
          echo "Using Python ${{ steps.get-python-version.outputs.python-version }}"
      
      - name: Set up Python ${{ steps.get-python-version.outputs.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ steps.get-python-version.outputs.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install -U pytest pyyaml cookiecutter
          
      - name: Run cookiecutter tests
        run: |
          # --keep-test-outputs also saves the generated repositories
          if [[ ${{ matrix.os }} == "ubuntu-latest" ]] ; then
            PYTEST_FLAGS="--keep-test-outputs $OUTPUT_DIRECTORY"
          else
            PYTEST_FLAGS=""
          fi
          echo "PYTEST_FLAGS=${PYTEST_FLAGS}"
          
          pytest tests/ $PYTEST_FLAGS

      - name: Run cookie CI
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: ./.github/actions/run-cookie-ci
        with:
          source-directory: ${{ env.OUTPUT_DIRECTORY }}/Test_with_condaforge-deps_and_ReadTheDocs/openff-cookie

      - name: Upload artifact
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.last-n-minor-python-release == 0 }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.OUTPUT_DIRECTORY }}
          retention-days: 3
